{"ast":null,"code":"import _classCallCheck from \"/Users/dhruvilpatel/Documents/Sponsorship/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dhruvilpatel/Documents/Sponsorship/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dhruvilpatel/Documents/Sponsorship/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dhruvilpatel/Documents/Sponsorship/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dhruvilpatel/Documents/Sponsorship/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/dhruvilpatel/Documents/Sponsorship/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/dhruvilpatel/Documents/Sponsorship/frontend/src/App.jsx\";\n\n/**\n * @author Dhruvil Patel\n * @description App object class, which is the first thing to be rendered\n * @version 0.0.1\n * Created 01/14/18\n */\n\n/***************************************************************IMPORTS***************************************************************/\nimport React, { Component } from \"react\"; // Default react imports for the component\n\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"; // React router components\n\nimport { SponsorshipPage, E404 } from \"./components/Pages\"; // Router Pages\n\nimport MLHBadge from \"./MLHBadge\"; // We need this to qualify as an official MLH event\n\nimport { defaults } from \"./Defaults\"; // Get a handle to the default application settings\n\n/*****************************************************************APP*****************************************************************/\n\n/**\n * Root application class. This is the object rendered in <div id=\"root\" />\n * This component will handle route handling based on the URL, so that we can show the user specific things based on the requested\n * page, and whether or not they are signed in.\n */\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  /**\n   * Bind all of the other method components, and set up the initial event handlers\n   * @param {Object} props React JSON object that represents the props\n   */\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this._event_onResize = _this._event_onResize.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getComponentProps = _this.getComponentProps.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    window.addEventListener(\"resize\", _this._event_onResize);\n    return _this;\n  }\n  /**\n   * Handle whenever the window resizes due to a user window resize or a zoom\n   */\n\n\n  _createClass(App, [{\n    key: \"_event_onResize\",\n    value: function _event_onResize() {\n      this.setState({\n        isMobile: window.innerWidth < defaults.mobileWidthThresholdRelaxed || window.innerHeight < defaults.mobileHeightThresholdRelaxed\n      });\n    }\n    /**\n     * As soon as react is ready, set the initial state\n     */\n\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this._event_onResize();\n    }\n    /**\n     * Returns a JSON object of the standard properties that we will send to each component\n     */\n\n  }, {\n    key: \"getComponentProps\",\n    value: function getComponentProps() {\n      return {\n        isMobile: this.state.isMobile\n      };\n    }\n    /**\n     * React render method, what the user sees on the screen\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var componentProps = this.getComponentProps();\n      return React.createElement(BrowserRouter, {\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(MLHBadge, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          position: \"fixed\",\n          zIndex: 1,\n          width: \"100%\",\n          height: \"100%\",\n          left: 0,\n          top: 0,\n          background: \"url(/assets/hru-background-large.png)\",\n          backgroundSize: \"cover\",\n          opacity: 0.25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          position: \"fixed\",\n          zIndex: 2,\n          width: \"100%\",\n          height: \"100%\",\n          left: 0,\n          top: 0,\n          backgroundColor: \"rgb(0, 0, 0)\",\n          backgroundSize: \"cover\",\n          opacity: 0.25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render(props) {\n          return React.createElement(SponsorshipPage, Object.assign({}, props, componentProps, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(Route, {\n        component: E404,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/dhruvilpatel/Documents/Sponsorship/frontend/src/App.jsx"],"names":["React","Component","BrowserRouter","Route","Switch","SponsorshipPage","E404","MLHBadge","defaults","App","props","_event_onResize","bind","getComponentProps","window","addEventListener","setState","isMobile","innerWidth","mobileWidthThresholdRelaxed","innerHeight","mobileHeightThresholdRelaxed","state","componentProps","width","position","zIndex","height","left","top","background","backgroundSize","opacity","backgroundColor"],"mappings":"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","sourcesContent":["/**\n * @author Dhruvil Patel\n * @description App object class, which is the first thing to be rendered\n * @version 0.0.1\n * Created 01/14/18\n */\n/***************************************************************IMPORTS***************************************************************/\nimport React, { Component } from \"react\"; // Default react imports for the component\nimport { BrowserRouter, Route, Switch} from \"react-router-dom\"; // React router components\nimport { SponsorshipPage, E404 } from \"./components/Pages\"; // Router Pages\nimport MLHBadge from \"./MLHBadge\"; // We need this to qualify as an official MLH event\nimport { defaults } from \"./Defaults\"; // Get a handle to the default application settings\n\n/*****************************************************************APP*****************************************************************/\n/**\n * Root application class. This is the object rendered in <div id=\"root\" />\n * This component will handle route handling based on the URL, so that we can show the user specific things based on the requested\n * page, and whether or not they are signed in.\n */\nclass App extends Component {\n    /**\n     * Bind all of the other method components, and set up the initial event handlers\n     * @param {Object} props React JSON object that represents the props\n     */\n    constructor(props) {\n        super(props);\n        this._event_onResize = this._event_onResize.bind(this);\n        this.getComponentProps = this.getComponentProps.bind(this);\n        window.addEventListener(\"resize\", this._event_onResize);\n    }\n    /**\n     * Handle whenever the window resizes due to a user window resize or a zoom\n     */\n    _event_onResize() {\n        this.setState({\n            isMobile: (window.innerWidth < defaults.mobileWidthThresholdRelaxed) ||\n            (window.innerHeight < defaults.mobileHeightThresholdRelaxed)\n        });\n    }\n    /**\n     * As soon as react is ready, set the initial state\n     */\n    componentWillMount() {\n        this._event_onResize();\n    }\n    /**\n     * Returns a JSON object of the standard properties that we will send to each component\n     */\n    getComponentProps() {\n        return {\n            isMobile: this.state.isMobile,\n        };\n    }\n    /**\n     * React render method, what the user sees on the screen\n     */\n    render() {\n        let componentProps = this.getComponentProps();\n        return (\n            <BrowserRouter style={{ width: \"100%\" }}>\n                {/* BrowserRouter wil allow us to switch between the different pages in our SPA based on the URL routing */}\n                <div>\n                    {/* We need to show this on our webpage at all times, so we're just going to dump it in the root */}\n                    <MLHBadge />\n                    <div style={{ position: \"fixed\", zIndex: 1, width: \"100%\", height: \"100%\", left: 0, top: 0, background: \"url(/assets/hru-background-large.png)\", backgroundSize: \"cover\", opacity: 0.25 }}></div>\n                    <div style={{ position: \"fixed\", zIndex: 2, width: \"100%\", height: \"100%\", left: 0, top: 0, backgroundColor: \"rgb(0, 0, 0)\", backgroundSize: \"cover\", opacity: 0.25 }}></div>\n                    <Switch>\n                        <Route exact path=\"/\" render={(props) => <SponsorshipPage {...props} {...componentProps} />} />\n                        {/* If none of the other urls were matched, we will show a 404 page to the user */}\n                        <Route component={E404} />\n                    </Switch>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}